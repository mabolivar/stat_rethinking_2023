---
title: "Homework- Week 02"
format: html
---
```{r packages}
#| message: false
library(rethinking)
library(ggplot2)
library(dplyr)
library(purrr)
library(stringr)
library(tidyr)
```

## Howell1 data set

```{r}
data(Howell1)
df <- Howell1
summary(df)
```

## Problem 01

From the Howell1 dataset, consider only the people younger than 13 years
old. Estimate the causal association between age and weight. Assume that
age influences weight through two paths. First, age influences height, and
height influences weight. Second, age directly influences weight through agerelated
changes in muscle growth and body proportions.
Draw the DAG that represents these causal relationships. And then write
a generative simulation that takes age as an input and simulates height and
weight, obeying the relationships in the DAG.

### DAG

> A --> H
> H --> W
> A --> W

### Model

Version 01

$$
\begin{align}
& W_i - \text{Normal}(\mu_i, \sigma) \\
& \mu_i = f_w(A_i, H_i) \\
& H_i - \text{Normal}(\lambda_i, \rho) \\
& \lambda_i = f_h(A_i) \\

\end{align}
$$

$$
\begin{align}
& W_i - \text{Normal}(\mu_i, \sigma) \\
& \mu_i = \alpha^w + \beta^w_1(A_i - \bar{A}) + \beta^w_2(H_i - \bar{H}) \\
& H_i - \text{Normal}(\gamma_i, \rho) \\
& \gamma_i = \alpha^h + \beta^h_1(A_i - \bar{A}) \\
& \alpha^w - \text{Normal}(15, 5) \\
& \beta^w_1 - \text{Normal}(3, 2) \\
& \beta^w_2 - \text{Normal}(4, 3) \\
& \sigma - \text{Uniform}(0, 30) \\
& \alpha^h - \text{Normal}(70, 10) \\
& \beta^h_1 - \text{Normal}(3, 2) \\
& \rho - \text{Uniform}(0, 30)
\end{align}
$$


```{r weight-simulator}
weight_simulator <- function(A){
  n <- length(A)
  A_bar <- mean(A)
  # Height
  a_h = rnorm(n, 100, 10)
  b_h = rlnorm(n, log(5), log(1.1))
  s_h <- runif(n, 0, 10)
  gamma <- a_h + b_h * (A - A_bar)
  H <- rnorm(n, gamma, s_h)
  
  # weight
  H_bar = mean(H)
  H_sd = sd(H)
  a_w = rnorm(n, 15, 5)
  b_w1 = rlnorm(n, 0, 0.6)
  b_w2 = rlnorm(n, 0, 0.6)
  s_w <- runif(n, 0, 10)
  mu <- a_w + b_w1 * (A - A_bar) + b_w2 * (H - H_bar)/H_sd
  W <- rnorm(n, mu, s_w)
  
  return(tibble(age = A, height = H, weight = W, gamma, a_h, b_h, mu, a_w, b_w1, b_w2 ))
}
```

```{r}
sim_ages <- sample(0:12, size = 1e3, replace = T)
df_simulation <- weight_simulator(sim_ages)

walk2(df_simulation, names(df_simulation), function(x,y) dens(x, main=y))
```


```{r}
ggplot(data=df_simulation, aes(x=age, y=weight)) +
  geom_point() +
  geom_vline(aes(xintercept=mean(age)), linetype = 2) +
  geom_hline(aes(yintercept=mean(weight)), linetype = 2) +
  geom_smooth() +
  labs(title = "Weights vs. Age")


ggplot(data=df_simulation, aes(x=height, y=weight)) +
  geom_point() +
  geom_vline(aes(xintercept=mean(height)), linetype = 2) +
  geom_hline(aes(yintercept=mean(weight)), linetype = 2) +
  geom_smooth() +
  labs(title = "Weights vs. Height")

ggplot(data=df_simulation, aes(x=age, y=height)) +
  geom_point() +
  geom_vline(aes(xintercept=mean(age)), linetype = 2) +
  geom_hline(aes(yintercept=mean(height)), linetype = 2) +
  geom_smooth() +
  labs(title = "Height vs. Age")

```

## Problem 02

Use a linear regression to estimate the total causal effect of each year of
growth on weight.
```{r}
df_children <- df %>% filter(age < 13) %>% as_tibble() %>% 
  rename(H = height, 
         W = weight,
         A = age) %>% 
  select(-male)
```


```{r}
A_bar <- df_children %>% pull(A) %>% mean()
m_weight <- quap(
  alist(
    W ~ dnorm(mu, s_w),
    mu <- a_w + b_w1 * (A - A_bar),
    a_w ~ dnorm(15, 5),
    b_w1 ~ dlnorm(0, 1),
    s_w ~ dunif(0, 30)
  ),
  data = df_children
)
```

```{r}
precis(m_weight)
```
```{r}
posterior_samples <- extract.samples(m_weight, n=20)

ggplot(data=df_children) +
  geom_point(aes(x=A - A_bar, y=W)) +
  geom_vline(aes(xintercept=mean(A - A_bar)), linetype = 2) +
  geom_hline(aes(yintercept=mean(W)), linetype = 2) +
  geom_abline(data = posterior_samples, 
              aes(intercept = a_w, slope = b_w1),
              alpha=0.5,
              color='grey'
  ) +
  labs(title = "Parameters posterior sampled values as ablines")
```
```{r}
prior_samples <- extract.prior(m_weight, n=20) %>% as_tibble()

ggplot(data=df_children) +
  geom_point(aes(x=A - A_bar, y=W)) +
  geom_vline(aes(xintercept=mean(A - A_bar)), linetype = 2) +
  geom_hline(aes(yintercept=mean(W)), linetype = 2) +
  geom_abline(data = prior_samples, 
              aes(intercept = a_w, slope = b_w1),
              alpha=0.5,
              color='grey'
  ) +
  labs(title = "Parameters prior sampled values as ablines")
```
### $\mu$ Mean samples

```{r}
# `link` function takes the quap approximation, sample from the posterior distribution, and then compute \mu for each case in the data.
age_range <- 0:12
posterior_mu <- link(m_weight, list(A=age_range))

mu_means <- apply(posterior_mu, 2, mean)
pi_intervals <- apply(posterior_mu, 2, HPDI) %>% 
  as.data.frame() %>% 
  t %>% 
  as_tibble() %>% 
  rename_with(.fn=function(x) c("lower", "upper"))

df_means <- tibble(age = age_range, posterior_mean = mu_means) %>% bind_cols(pi_intervals)
```

```{r}
ggplot(data=df_means) +
  geom_point(data=df_children, aes(x=A, y=W), 
             shape=21, size = 2, color= 'steelblue', stroke=2,
             alpha = 0.9) +
  geom_line(aes(x=age, y=posterior_mean)) +
  geom_ribbon(aes(x=age,  ymin=lower, ymax=upper), alpha= 0.2) +
  labs(x = "Age", y = "Weight", 
       title = "mu parameter effect across ages")

```

### Predictive posterior distribution

```{r}
age_range <- 0:12
pred_posterior <- sim(m_weight, data=list(A=age_range)) %>% 
  as_tibble() %>% 
  rename_with(.fn=function(x) age_range) %>% 
  map2_df(., colnames(.), function(x, y) tibble(age=y, weight=x)) %>% 
  mutate(age = str_pad(age, pad = 0, width=2))
```

```{r}
ggplot(data=pred_posterior) +
  geom_density(aes(x=weight, color=age)) +
  facet_grid(age ~ .)
```

## Problem 03

Now suppose the causal association between age and weight might be different
for boys and girls. Use a single linear regression, with a categorical
variable for sex, to estimate the total causal effect of age on weight separately
for boys and girls. How do girls and boys differ? Provide one or more posterior
contrasts as a summary.

```{r}
df_children_sex <- df %>% filter(age < 13) %>% as_tibble() %>% 
  transmute(H = height, 
            W = weight,
            A = age,
            S = male + 1L # 1: Female, 2: Male
  ) 
```


```{r}
A_bar = mean(df_children_sex$A)
m_weight_sex <- quap(
  alist(
    W ~ dnorm(mu, sigma),
    mu <- alpha[S] + beta[S] * (A - A_bar),
    alpha[S] ~ dnorm(15, 5),
    beta[S] ~ dlnorm(0, 1),
    sigma ~ dunif(0, 30)
  ),
  data = df_children_sex
)

precis(m_weight_sex, depth = 2)
```

### Posterior predictive distribution

```{r}
age_range = 0:12
posterio_pred <- map_df(
  .x = c(1,2),
  .f = function(x){                      
    sim(m_weight_sex, data = tibble(S = x, A = age_range)) %>% 
      as_tibble() %>% 
      rename_with(.fn=function(x) age_range) %>% 
      map2_df(., colnames(.), function(x, y) tibble(age=y, weight=x)) %>% 
      mutate(sex = as.character(x), 
             age = str_pad(age, pad = 0, width=2),
             id = row_number()
      )
  }
)

```


```{r}
ggplot(data = posterio_pred) +
  geom_density(aes(x=weight, color = sex))+
  facet_grid(age ~ .)
```

```{r}
df_contrast <- inner_join(
  posterio_pred %>% filter(sex == 1) %>% mutate(weight_f = weight) %>% 
    select(-sex, -weight),
  posterio_pred %>% filter(sex == 2) %>% mutate(weight_m = weight) %>% 
    select(-sex, -weight),
  by = c("age", "id")
) %>% 
  mutate(
    contrast = weight_m - weight_f
  )

# Proportion greater than zero
df_contrast %>% pull(contrast) %>% {. > 0} %>% mean
```


```{r}
ggplot(df_contrast) + 
  geom_density(aes(x=contrast, group=age))
```

```{r}

percentiles <- c(0.5, 0.67, 0.89, 0.99)
df_contrast_intervals <- df_contrast %>% 
  split(.$age) %>% 
  map_df(.x=., 
         .f=function(x){
           map(percentiles, function(p){
             PI(x$contrast, p) %>% 
               as.data.frame() %>% t %>% 
               as_tibble() %>%
               rename_with(.fn = function(z) c("lower", "upper")) %>% 
               mutate(age = x$age[1],
                      p = p) %>% 
               select(age, p, everything())
           }
           )
         }
  )
```

```{r}
ggplot(df_contrast_intervals %>% mutate(age=as.numeric(age))) +
  geom_ribbon(aes(x=age, y=0,  ymin=lower, ymax=upper, group=p), 
              alpha = 0.2) +
  geom_hline(yintercept=0, linetype=2) +
  labs(title="Distribution of contrast by age")
  
```

## Problem 04

The data in data(Oxboys) (rethinking
                          package) are growth records for 26 boys measured over 9 periods. I want
you to model their growth. Specifically, model the increments in growth
from one period (Occasion in the data table) to the next. Each increment is
simply the difference between height in one occasion and height in the previous
occasion. Since none of these boys shrunk during the study, all of the
growth increments are greater than zero. Estimate the posterior distribution
of these increments. Constrain the distribution so it is always positiveâ€”it
should not be possible for the model to think that boys can shrink from year
to year. Finally compute the posterior distribution of the total growth overall 9 occasions.

```{r data04}
data("Oxboys")
df_boys <- Oxboys
```


S --> dH
A --> dH


```{r}
df_tidy <- df_boys %>% 
  rename_all(.f=tolower) %>% 
  group_by(subject) %>% 
  mutate(delta_h = height - lag(height)) %>% 
  ungroup %>% 
  filter(!is.na(delta_h))
```


```{r age_subject}
df_tidy %>% 
  select(subject, occasion, delta_h) %>% 
  mutate(occasion = occasion -1) %>% 
  spread(key=occasion, value = delta_h)
```


i = individual
j = occasion
$$
\begin{align}
\Delta^h_j \sim \text{Log-Normal}(\mu_{ij}, \sigma) \\
\mu_{ij} = f^i_\Delta(A_j) \\
A_{j} \sim \text{Normal}(\mu_j^A, \sigma^A) \\
\mu^A_{j} = f^i_\Delta(O)
\end{align}
$$
$$
\begin{align}
\Delta^h_{ij} \sim \text{Log-Normal}(\mu_{ij}, \sigma) \\
\mu_{ij} = \alpha_i + \beta_i A_{j} \\
A_j \sim \text{Normal}(\mu^A_j, \sigma^A) \\
\mu^A_{j} = \alpha^A_{O_j} \\
\alpha^A_{O_j} \sim \text{Normal}(0, 1) \\
\alpha_i \sim \text{Normal(0, 1)} \\
\beta_i \sim \text{Normal(0, 1)}
\end{align}
$$

### Model aggregated

```{r}
df_model <- df_tidy %>% 
  transmute(dH = delta_h, S = subject, A = age, O = occasion - 1)

m_boys <- quap(
  alist(
    dH ~ dlnorm(mu_ij, sigma),
    mu_ij <- alpha + beta * A,
    alpha ~ dnorm(0,0.1),
    beta ~ dnorm(0,1),
    sigma ~ dunif(0,3)
  ),
  data = df_model
)
precis(m_boys, depth=2)
```

```{r}
data_range <- df_model %>% select(O, A, S)
posterior_mus <- list(mu = link(m_boys))

str(posterior_mus)
```
```{r}
mu_means <- map(
  .x = posterior_mus,
  .f=function(x) {
    apply(x, 2, mean) 
  }
) %>% as_tibble

pi_intervals <-  map2_dfc(
  .x = posterior_mus, 
  .y = names(posterior_mus),
  .f=function(x, y){
    apply(x, 2, HPDI) %>% 
      as.data.frame() %>% 
      t %>% 
      as_tibble() %>% 
      rename_with(.fn=function(x) paste0(y, "_", c("lower", "upper")))
  }
) 

df_means <-  bind_cols(data_range, mu_means, pi_intervals)
```

```{r}
ggplot(data=df_means) +
  geom_line(aes(x=A, y=exp(mu), group=S)) +
  geom_point(data=df_model, aes(x=A, y=dH, group=S), color="grey")
```

```{r}
data_range <- df_model %>% 
  select(O, A, S) %>%
  mutate(label = paste(O,A,S, sep="|"))
df_posterior <- sim(m_boys, data_range) %>% 
  as_tibble() %>% 
  rename_with(.fn=function(x) data_range$label) %>% 
  gather(key = label) %>% 
  separate(label, into = c("O", "A", "S"), sep = "\\|") %>% 
  mutate_all(.funs = as.numeric)


str(df_posterior)
```
```{r}
df_growth_posterior <- df_posterior %>% 
  group_by(O, A, S) %>% 
  mutate(id = row_number()) %>% 
  ungroup() %>% 
  arrange(id, S, O) %>% 
  group_by(id, S) %>% 
  summarise(value =sum(value), .groups = "drop") %>% 
  arrange(S, id) %>% 
  print()

```
```{r}
real_growth <- df_model %>% 
  group_by(S) %>% 
  summarise(growth=sum(dH)) %>% 
  print
```
```{r}
ggplot(data=df_growth_posterior) +
  geom_density(aes(x=value))
```

```{r}
dens(df_growth_posterior$value)
```
